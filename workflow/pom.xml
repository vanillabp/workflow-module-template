<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.vanillabp.template.usecase</groupId>
    <artifactId>usecase-workflow-module-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>usecase</artifactId>

  <properties>
    <openapi-generator.version>7.3.0</openapi-generator.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator.version}</version>
        <executions>
          <execution>
            <id>usecase-api-client</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/openapi/api/v1.yaml</inputSpec>
              <output>${project.basedir}/src/main/webapp/src/api-client</output>
              <generatorName>typescript-fetch</generatorName>
              <configurationFile>${project.basedir}/src/main/openapi/typescript-config.yaml</configurationFile>
              <addCompileSourceRoot>false</addCompileSourceRoot>
            </configuration>
          </execution>
          <execution>
            <id>usecase-api-server</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/openapi/api/v1.yaml</inputSpec>
              <generatorName>spring</generatorName>
              <configurationFile>${project.basedir}/src/main/openapi/spring-config.yaml</configurationFile>
              <apiPackage>io.vanillabp.template.usecase.api.v1</apiPackage>
              <modelPackage>io.vanillabp.template.usecase.api.v1.dto</modelPackage>
              <invokerPackage>io.vanillabp.template.usecase.api.v1.invoker</invokerPackage>
              <addCompileSourceRoot>true</addCompileSourceRoot>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.12.1</version>
        <executions>
          <execution>
            <id>install node and npm install</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
            <execution>
              <id>npm install</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>npm</goal>
              </goals>
              <configuration>
                <arguments>--@vanillabp:registry=${npm.registry} update --scope @vanillabp/**</arguments>
              </configuration>
            </execution>
          <execution>
            <id>npm build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <nodeVersion>v21.6.2</nodeVersion>
          <npmVersion>10.4.0</npmVersion>
          <installDirectory>${java.io.tmpdir}/frontend-maven-plugin</installDirectory>
          <workingDirectory>${project.basedir}/src/main/webapp</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- general -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>
    <!-- VanillaBP -->
    <dependency>
      <groupId>io.vanillabp</groupId>
      <artifactId>spring-boot-support</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vanillabp.businesscockpit</groupId>
      <artifactId>spi-for-java</artifactId>
    </dependency>
    <!-- openapi -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
    </dependency>
    <!-- test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.community.vanillabp</groupId>
      <artifactId>camunda8-spring-boot-adapter</artifactId>
      <version>1.3.0-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>2.1.214</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
